package Logica;
import java.sql.ResultSet;
import java.util.LinkedList;

public class Adminstrador extends Persona{
	LinkedList <Login> empleados=new LinkedList <Login>();
	private int claveA;

	public Adminstrador(String nombre, String apellido,
			String dni, String id, String contrasena, String tipo_cuenta) {
		super(nombre, apellido, dni, id, contrasena);
	}
	
	
	
	public LinkedList<Login> getEmpleados() {
		return empleados;
	}



	public void setEmpleados(LinkedList<Login> empleados) {
		this.empleados = empleados;
	}



	public int getClaveA() {
		return claveA;
	}

	public void setClaveA(int claveA) {
		this.claveA = claveA;
	}

	public  LinkedList<Login> verEmpleados() {
		
		String sql = "SELECT empleado.idempleado,persona.nombre,persona.apellido,persona.dni,empleado_tipo.Nombre clase FROM `empleado` INNER JOIN empleado_tipo on empleado_tipo.idempleado_tipo = empleado.empleado_tipo_idempleado_tipo INNER JOIN persona on Persona.idPersona=empleado.Persona_idPersona";
		String[] datos = new String[5];
		
		try {

			stmt = conexion.prepareStatement(sql);
			
			ResultSet result = stmt.executeQuery();
			
			while (result.next()) {
				datos[0] = String.valueOf(result.getInt(1));
				datos[1] = result.getString(2);
				datos[2] = result.getString(3);
				datos[3] = String.format("%.0f", result.getFloat(4));
				datos[4] = result.getString(5);
				
				this.empleados.add(new Login(Integer.parseInt(datos[0]),Integer.parseInt(datos[3]),datos[1],datos[2],null,datos[4]));
				
				conexion.close();
				return empleados;
			}

			return null;

		} catch (Exception excepcion) {
			System.out.println(excepcion.getMessage());
			
			return null;
		}

	}
	
	public void despedirEmpleado() {
		
	}



	@Override
	public String toString() {
		return "Adminstrador [empleados=" + empleados + ", claveA=" + claveA + "]";
	}
	
	
}
